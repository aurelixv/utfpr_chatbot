
version: "3"
name: utfpr-chatbot

services:
  rasa-server:
    container_name: rasa-server
    image: aurelixv/rasa-server:latest
    build:
      context: .
      dockerfile: ./docker/rasa-server.Dockerfile
    depends_on:
      rasa-actions:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks: ["net"]
    restart: always
    command: run -vv --model models/nlu_utfpr_chatbot.tar.gz --credentials credentials.yml -p 5005
    working_dir: /app
    volumes:
      - ./bot:/app
    ports:
      - 5005:5005
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://0.0.0.0:5005/"]
      interval: 60s
      timeout: 5s
      retries: 5
    labels:
      kompose.service.type: loadbalancer

  rasa-actions:
    container_name: rasa-actions
    image: aurelixv/rasa-actions:latest
    build:
      context: .
      dockerfile: ./docker/rasa-actions.Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    networks: ["net"]
    restart: always
    command: start -vv -p 5055 --actions actions
    volumes:
      - ./bot/actions:/app/actions
      - ./bot/endpoints.yml:/app/endpoints.yml
    ports:
      - 5055:5055
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://0.0.0.0:5055/health"]
      interval: 1s
      timeout: 5s
      retries: 5

  postgres:
    container_name: postgres
    image: aurelixv/postgres:latest
    build:
      context: .
      dockerfile: ./docker/postgres.Dockerfile
    networks: ["net"]
    restart: always
    environment:
      POSTGRES_USER: "utfpr_chatbot"
      POSTGRES_PASSWORD: "utfpr_chatbot"
    volumes:
      - ./database/ingestion.sh:/docker-entrypoint-initdb.d/ingestion.sh
      - ./database/data_csv:/utfpr_chatbot/data
      - ./database/DDL:/utfpr_chatbot/DDL
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "utfpr_chatbot"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin
    image: aurelixv/pgadmin:latest
    build:
      context: .
      dockerfile: ./docker/pgadmin.Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    networks: ["net"]
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@utfpr-chatbot.com"
      PGADMIN_DEFAULT_PASSWORD: "utfpr_chatbot"
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json
      - ./pgadmin/pgpass:/root/.pgadmin
    ports:
      - 8888:80
    labels:
      kompose.service.type: loadbalancer

networks: {net: {}}
