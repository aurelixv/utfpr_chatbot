apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -o kubernetes --volumes=hostPath
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -o kubernetes --volumes=hostPath
        kompose.version: 1.28.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/utfpr-chatbot-net: "true"
        io.kompose.service: postgres
    spec:
      containers:
        - env:
            - name: POSTGRES_PASSWORD
              value: utfpr_chatbot
            - name: POSTGRES_USER
              value: utfpr_chatbot
          image: aurelixv/postgres:latest
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - utfpr_chatbot
            failureThreshold: 5
            periodSeconds: 5
            timeoutSeconds: 5
          name: postgres
          ports:
            - containerPort: 5432
          resources: {}
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/ingestion.sh
              name: postgres-hostpath0
            - mountPath: /utfpr_chatbot/data
              name: postgres-hostpath1
            - mountPath: /utfpr_chatbot/DDL
              name: postgres-hostpath2
      restartPolicy: Always
      volumes:
        - hostPath:
            path: /Users/aurelius/Documents/TCC - Chatbot UTFPR/dev/database/ingestion.sh
          name: postgres-hostpath0
        - hostPath:
            path: /Users/aurelius/Documents/TCC - Chatbot UTFPR/dev/database/data_csv
          name: postgres-hostpath1
        - hostPath:
            path: /Users/aurelius/Documents/TCC - Chatbot UTFPR/dev/database/DDL
          name: postgres-hostpath2
status: {}
